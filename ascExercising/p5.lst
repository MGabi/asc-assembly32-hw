     1                                  bits 32
     2                                  ;se citeste un nume de fisier si un numar
     3                                  ;sa se citeasca din fisier cuvintele separate prin spatiu
     4                                  ;si sa se afiseze in consola cuvintele de pe pozitiile multiplii de N
     5                                  global start        
     6                                  
     7                                  extern exit, scanf, printf, fopen, fprintf, fread, fclose, fwrite
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  import fread msvcrt.dll
    14                                  import fclose msvcrt.dll
    15                                  import fwrite msvcrt.dll
    16                                  
    17                                  segment data use32 class=data
    18 00000000 FFFFFFFF                    desc_fisier dd -1
    19 00000004 00<rept>                    nume_fisier times 32 db 0
    20 00000024 00000000                    n dd 0
    21 00000028 257300                      fmt_s db "%s", 0
    22 0000002B 256300                      fmt_c db "%c", 0
    23 0000002E 256400                      fmt_d db "%d", 0
    24 00000031 6E203D2000                  p_n db "n = ", 0
    25 00000036 4669736965723A2000          p_nume db "Fisier: ", 0
    26 0000003F 00000000                    poz_cuv dd 0
    27 00000043 00<rept>                    cuvant times 32 db 0
    28 00000063 722B                        access db "r+"
    29                                      len equ 1
    30                                      
    31                                      
    32                                      
    33                                      
    34                                      
    35                                  segment code use32 class=code
    36                                      start:
    37                                          
    38 00000000 68[31000000]                    push dword p_n
    39 00000005 FF15[00000000]                  call [printf]
    40 0000000B 83C404                          add esp, 4
    41                                          
    42 0000000E 68[24000000]                    push dword n
    43 00000013 68[2E000000]                    push dword fmt_d
    44 00000018 FF15[00000000]                  call [scanf]
    45 0000001E 83C408                          add esp, 4*2
    46                                          
    47 00000021 68[36000000]                    push dword p_nume
    48 00000026 FF15[00000000]                  call [printf]
    49 0000002C 83C404                          add esp, 4
    50                                          
    51 0000002F 68[04000000]                    push dword nume_fisier
    52 00000034 68[28000000]                    push dword fmt_s
    53 00000039 FF15[00000000]                  call [scanf]
    54 0000003F 83C408                          add esp, 4*2
    55                                          
    56 00000042 68[63000000]                    push dword access
    57 00000047 68[04000000]                    push dword nume_fisier
    58 0000004C FF15[00000000]                  call [fopen]
    59 00000052 83C408                          add esp, 4*2
    60                                          
    61 00000055 83F800                          cmp eax, 0
    62 00000058 7475                            je close
    63                                          
    64 0000005A A3[00000000]                    mov [desc_fisier], eax
    65                                          
    66                                          citire_cuvinte:
    67                                          
    68 0000005F BE00000000                          mov esi, 0
    69                                              citire:
    70                                                  
    71 00000064 8D86[43000000]                          lea eax, [cuvant+esi]
    72 0000006A 60                                      pushad
    73                                                  
    74 0000006B FF35[00000000]                          push dword [desc_fisier]
    75 00000071 6A01                                    push dword len
    76 00000073 6A01                                    push dword 1
    77 00000075 50                                      push dword eax
    78 00000076 FF15[00000000]                          call [fread]
    79 0000007C 83C410                                  add esp, 4*4
    80                                                  
    81                                                  
    82 0000007F 83F800                                  cmp eax, 0
    83 00000082 743C                                    je final
    84                                                  
    85                                                  
    86 00000084 61                                      popad
    87                                                  
    88 00000085 80BE[43000000]20                        cmp byte [cuvant+esi], ' '
    89 0000008C 7403                                    je check_poz
    90 0000008E 46                                      inc esi
    91                                                  
    92 0000008F EBD3                                    jmp citire
    93                                              
    94                                              check_poz:
    95                                                  
    96 00000091 A1[3F000000]                            mov eax, [poz_cuv]
    97 00000096 BA00000000                              mov edx, 0
    98                                                  
    99 0000009B 8B1D[24000000]                          mov ebx, [n]
   100 000000A1 F7F3                                    div ebx
   101                                                  
   102 000000A3 83FA00                                  cmp edx, 0
   103 000000A6 7510                                    jne continue
   104                                                  
   105                                                  printare_consola:
   106                                                      
   107                                                  
   108 000000A8 60                                          pushad
   109                                                      
   110 000000A9 68[43000000]                                push dword cuvant
   111 000000AE FF15[00000000]                              call [printf]
   112 000000B4 83C404                                      add esp, 4
   113                                                      
   114 000000B7 61                                          popad
   115                                              continue:
   116 000000B8 FF05[3F000000]                      inc dword [poz_cuv]
   117                                              
   118 000000BE EB9F                            jmp citire_cuvinte
   119                                              
   120                                      final:
   121                                      
   122 000000C0 FF35[00000000]                  push dword [desc_fisier]
   123 000000C6 FF15[00000000]                  call [fclose]
   124 000000CC 83C404                          add esp, 4
   125                                          
   126                                      close:
   127 000000CF 6A00                            push dword 0
   128 000000D1 FF15[00000000]                  call [exit]
