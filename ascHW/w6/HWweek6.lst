     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit
     6                                  extern printf
     7                                  extern scanf
     8                                  import exit msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import scanf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13                                  
    14 00000000 00000000                    a dd 0
    15 00000004 00000000                    b dd 0
    16 00000008 00000000                    c dd 0
    17 0000000C 61203D2000                  messageA db "a = ", 0
    18 00000011 62203D2000                  messageB db "b = ", 0
    19 00000016 257300                      formatS db "%s", 0
    20 00000019 256400                      formatD db "%d", 0
    21 0000001C 257500                      formatU db "%u", 0
    22 0000001F 257800                      formatX db "%x", 0
    23                                  
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ;print "a = "
    27 00000000 68[0C000000]                    push dword messageA
    28 00000005 68[16000000]                    push dword formatS
    29 0000000A FF15[00000000]                  call [printf]
    30 00000010 83C408                          add ESP, 4*2
    31                                          
    32                                          ;read A as HEXA
    33 00000013 68[00000000]                    push dword a
    34 00000018 68[1F000000]                    push dword formatX
    35 0000001D FF15[00000000]                  call [scanf]
    36 00000023 83C408                          add ESP, 4*2
    37                                          
    38                                          ;print "b = "
    39 00000026 68[11000000]                    push dword messageB
    40 0000002B 68[16000000]                    push dword formatS
    41 00000030 FF15[00000000]                  call [printf]
    42 00000036 83C408                          add ESP, 4*2
    43                                          
    44                                          ;read B as HEXA
    45 00000039 68[04000000]                    push dword b
    46 0000003E 68[1F000000]                    push dword formatX
    47 00000043 FF15[00000000]                  call [scanf]
    48 00000049 83C408                          add ESP, 4*2
    49                                          
    50                                          ;make the addition
    51 0000004C B800000000                      mov EAX, 0
    52 00000051 0305[00000000]                  add EAX, [a]
    53 00000057 0305[04000000]                  add EAX, [b]
    54 0000005D A3[08000000]                    mov [c], EAX
    55                                          
    56                                          ;printing the result as DECIMAL
    57 00000062 FF35[08000000]                  push dword [c]
    58 00000068 68[19000000]                    push dword formatD
    59 0000006D FF15[00000000]                  call [printf]
    60 00000073 83C408                          add ESP, 4*2
    61                                          
    62 00000076 6A00                            push dword 0
    63 00000078 FF15[00000000]                  call [exit]
